credentials {
  base {
    type = "ssh"
    userId = "jenkins"
    credentialsId = "jenkins"
    description = ""
    passphrase = ""
    path = "/var/jenkins_home/.ssh/id_rsa"
  }
  artifactory {
    type = "password"
    userId = "publisher"
    credentialsId = "artifactory-publisher"
    description = ""
    path = "/var/jenkins_home/.ssh/.password"
  }
}

registry {
   registryURL = "http://localhost:5000"
   registryCredentials = ""
}

artifactory {
  server1 {
    enabled = false
    deployerCredentialsId = "${credentials.artifactory.credentialsId}"
    resolverCredentialsId = "${credentials.artifactory.credentialsId}"
    overridingCredentials = false
    connectionTimeOut = 300
    serverName = "my-lovely-artifactory"
    serverUrl = "http://1.1.1.1:8081/artifactory"
    bypassProxy = false
  }
}

slack {
  team1 {
    enabled = false
    slackTeamDomain = "mydomain"
    slackToken = "mytoken"
    slackRoom = "#jenkins-builds"
    slackBuildServerUrl = "${global.jenkinsRootUrl}"
    slackSendAs = ""
  }
}

images {
  masterImageName = "jmaster"
  slaveImageName = "jslave"
}

global {
  numExecutorsOnMaster = 0
  jenkinsRootUrl = ""
  jenkinsAdminEmail = "Jenkins <no-reply@yourcompany.com>"
  scmQuietPeriod = 3
  scmCheckoutRetryCount = 3
  git {
    name = "Jenkins Jenkinsson"
    email = "no-reply@yourcompany.com"
  }
  variables {
    default_credentials = "${credentials.base.credentialsId}"
    default_repo = "git@github.com:Praqma/JenkinsAsCodeReference.git"
    default_branch = "master"
    default_registry_url = "${registry.registryURL}"
    default_registry_credId  = "${registry.registryCredentials}"
    utility_slave = "utility-slave"
    master_image_name = "${images.masterImageName}"
    slave_image_name = "${images.slaveImageName}"
  }
}

libraries{
  library1 {
      enabled = false
      name = "name-of-library"
      version = "tag/commit/branch"
      implicitly = true
      allow_overridden = false
      scm_path = "git@github.com:your-library"
      credentialsId = "${credentials.base.credentialsId}"
      branch = "master"
  }
}

seedjobs {
  jenkins {
    name = "jenkins_as_a_code-seedjob"
    repo = "${global.variables.default_repo}"
    branch = "${global.variables.default_branch}"
    credentials = "${credentials.base.credentialsId}"
    path = "jobdsl-gradle/src/jobs/groovy/*.groovy"
    classpath = "jobdsl-gradle/src/main/groovy"
    parameters {
    }
  }
}
